{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","passwordForgot.js","Login.js","Signout.js","components/session/context.js","components/session/withAuthentication.js","components/session/withAuthorization.js","Navigation.js","passwordChange.js","components/Pages/Account.js","components/Pages/home.js","components/Pages/Admin.js","components/Pages/Signup.js","components/constants/roles.js","components/Pages/enterwins.js","components/Pages/enterlosses.js","App.js","serviceWorker.js","index.js","assets/us-airsoft-logo.png","assets/airsoftbanner.jpg"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","require","config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","user","uid","once","then","snapshot","dbUser","val","roles","db","ref","users","app","initializeApp","this","database","INITIAL_STATE","error","PasswordForgetFormBase","onSubmit","event","state","setState","catch","preventDefault","onChange","target","name","value","isInvalid","type","placeholder","disabled","message","PasswordForgetLink","to","PasswordForgetForm","robot","SignInFormBase","recaptcha","reset","history","push","handleCaptchaResponseChange","bind","response","el","sitekey","SignInForm","compose","withRouter","SignInPage","className","Button","variant","onClick","AuthUserContext","withAuthentication","WithAuthentication","JSON","parse","localStorage","getItem","listener","setItem","stringify","removeItem","Provider","withAuthorization","condition","WithAuthorization","NavigationAuth","src","logo","alt","username","NavItem","Navbar","collapseOnSelect","expand","bg","Nav","Toggle","aria-controls","Collapse","id","NavDropdown","title","Item","eventKey","Divider","NavigationNonAuth","Navigation","passwordOne","passwordTwo","PasswordChangeForm","Home","banner","AdminPage","loading","on","usersObject","usersList","Object","keys","map","key","off","UserList","isAdmin","SignUpFormBase","onChangeCheckbox","checked","set","SignUpForm","SignUpPage","EnterWins","updateUser","apiCall","REACT_APP_API_CALL_WIN","fetch","x","console","log","document","getElementById","focus","results","handleChange","addEventListener","tmp","handleKeypress","keyCode","Form","Group","controlId","Label","Control","Text","EnterLosses","REACT_APP_API_CALL_LOSS","Leaderboard","Pricing","LoginRoute","Login","path","Admin","Account","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.671c7361.chunk.js","sourcesContent":["import React from 'react';\n \nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n      {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n  );\n \nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nrequire('dotenv').config();\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n    // *** Auth API ***\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n    // *** Merge Auth and DB User API *** //\n    onAuthUserListener = (next, fallback) =>\n        this.auth.onAuthStateChanged(authUser => {\n            if (authUser) {\n                this.user(authUser.uid)\n                    .once('value')\n                    .then(snapshot => {\n                        const dbUser = snapshot.val();\n                        // default empty roles\n                        if (!dbUser.roles) {\n                            dbUser.roles = {};\n                        }\n                        // merge auth and db user\n                        authUser = {\n                            uid: authUser.uid,\n                            email: authUser.email,\n                            ...dbUser,\n                        };\n                        next(authUser);\n                    });\n            } else {\n                fallback();\n            }\n        });\n\n    // User API\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n \nexport default Firebase;\n \nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n \nimport { withFirebase } from './components/Firebase';\n \nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n \nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n \nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = { ...INITIAL_STATE };\n  }\n \n  onSubmit = event => {\n    const { email } = this.state;\n \n    this.props.firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { email, error } = this.state;\n \n    const isInvalid = email === '';\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={this.state.email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst PasswordForgetLink = () => (\n  <p>\n    <Link to=\"/forgotpassword\">Forgot Password?</Link>\n  </p>\n);\n \nexport default PasswordForgetPage;\n \nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n \nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n \nimport { withFirebase } from './components/Firebase';\nimport { PasswordForgetLink } from './passwordForgot';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\n//import { SignUpLink } from './components/Pages/Signup';\n//    <SignUpLink /> \n \nconst SignInPage = () => (\n  <div className=\"test\">\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n  </div>\n);\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n  robot: true\n};\n \nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCaptchaResponseChange = this.handleCaptchaResponseChange.bind(this);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  //Recaptcha stuff\n  handleCaptchaResponseChange(response) {\n    this.setState({\n      robot: false,\n    });\n  }\n \n  onSubmit = event => {\n    const { email, password } = this.state;\n    this.recaptcha.reset();\n \n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { email, password, error, robot } = this.state;\n \n    const isInvalid = password === '' || email === '' || robot === true;\n \n    return (\n        <div>\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        {error && <p>{error.message}</p>}\n      </form>\n      <ReCAPTCHA\n        ref={(el) => { this.recaptcha = el; }}\n        sitekey=\"6Lc0JPsUAAAAAGfLV1lzptnyO2V1dTU7GfR5_5h5\"\n        onChange={this.handleCaptchaResponseChange}/>\n    </div>\n    );\n  }\n}\n \nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n \nexport default SignInPage;\n \nexport { SignInForm };","import React from 'react';\nimport { Button } from 'react-bootstrap/';\n \nimport { withFirebase } from './components/Firebase';\n \nconst SignOutButton = ({ firebase }) => (\n  <Button variant=\"outline-secondary\" onClick={firebase.doSignOut}>\n    Sign Out\n  </Button>\n);\n \nexport default withFirebase(SignOutButton);","import React from 'react';\n \nconst AuthUserContext = React.createContext(null);\n \nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: JSON.parse(localStorage.getItem('authUser')),\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.onAuthUserListener(\n                authUser => {\n                    localStorage.setItem('authUser', JSON.stringify(authUser));\n                    this.setState({ authUser });\n                },\n                () => {\n                    localStorage.removeItem('authUser');\n                    this.setState({ authUser: null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport AuthUserContext from './context';\n\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.onAuthUserListener(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(\"/login\");\n                    }\n                },\n                () => this.props.history.push(\"/login\"),\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport logo from './assets/us-airsoft-logo.png';\nimport { Navbar, Nav, Button, NavItem, NavDropdown } from 'react-bootstrap/';\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SignOutButton from './Signout';\nimport { AuthUserContext } from './components/session';\nimport * as ROLES from './components/constants/roles';\n\nconst Navigation = ({ authUser }) => (\n    <div>\n        <AuthUserContext.Consumer>\n        {authUser =>\n        authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n        }\n        </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = ({ authUser }) => (    \n<div>\n    <div className=\"App-header\">\n        <div className=\"logobox\">\n            <img src={logo} alt=\"US Airsoft logo\" className=\"logo\" />\n        </div>\n        <div className=\"login\">\n            <p className=\"welcome\">\n                Welcome {authUser.username}!\n            </p>\n            <NavItem>\n                <SignOutButton />\n            </NavItem>\n        </div>\n    </div>\n    <div className=\"navbar\">\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"nav\" variant=\"light\">\n            <Nav className=\"mr-auto\">\n                <NavItem>\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\n                </NavItem>\n            </Nav>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/leaderboard\">Leaderboard</Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/pricing\">Pricing</Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/account\">My Account</Link>\n                    </NavItem>\n\n                    {!!authUser.roles[ROLES.ADMIN] && (\n                    <NavDropdown title=\"Admin\" id=\"nav-dropdown\">\n                        <LinkContainer to=\"/enterwins\">\n                            <NavDropdown.Item eventKey={4.1}>Update Wins</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to=\"/enterlosses\">\n                            <NavDropdown.Item eventKey={4.2}>Update Losses</NavDropdown.Item>\n                        </LinkContainer>\n                        <NavDropdown.Divider />\n                        <LinkContainer to=\"/admin\">\n                            <NavDropdown.Item eventKey={4.3}>Testing</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n                    )}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </div>\n    </div>\n);\n\nconst NavigationNonAuth = () => (\n    <div>\n    <div className=\"App-header\">\n        <div className=\"logobox\">\n            <img src={logo} alt=\"US Airsoft logo\" className=\"logo\" />\n        </div>\n        <div className=\"login\">\n            <Button variant=\"outline-secondary\">\n                <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                </LinkContainer>\n            </Button>\n        </div>\n    </div>\n    <div className=\"navbar\">\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"nav\" variant=\"light\">\n            <Nav className=\"mr-auto\">\n                <NavItem>\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\n                </NavItem>\n            </Nav>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/leaderboard\">Leaderboard</Link>\n                    </NavItem>\n                    <NavItem>\n                        <Link className=\"nav-link\" to=\"/pricing\">Pricing</Link>\n                    </NavItem>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </div>\n</div>\n  );\n\nexport default Navigation;","import React, { Component } from 'react';\n \nimport { withFirebase } from './components/Firebase';\n \nconst INITIAL_STATE = {\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n \nclass PasswordChangeForm extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = { ...INITIAL_STATE };\n  }\n \n  onSubmit = event => {\n    const { passwordOne } = this.state;\n \n    this.props.firebase\n      .doPasswordUpdate(passwordOne)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { passwordOne, passwordTwo, error } = this.state;\n \n    const isInvalid =\n      passwordOne !== passwordTwo || passwordOne === '';\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"New Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm New Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nexport default withFirebase(PasswordChangeForm);","import React from 'react';\nimport '../../App.css';\n\nimport { PasswordForgetForm } from '../../passwordForgot';\nimport PasswordChangeForm from '../../passwordChange';\nimport { AuthUserContext, withAuthorization } from '../session';\n\nconst AccountPage = () => (\n  <AuthUserContext.Consumer>\n    {authUser => (\n      <div>\n        <h1 className=\"pagePlaceholder\">Account Page</h1>\n        <PasswordForgetForm />\n        <PasswordChangeForm />\n      </div>\n    )}\n  </AuthUserContext.Consumer>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(AccountPage);","import React from 'react';\nimport banner from '../../assets/airsoftbanner.jpg';\n \n\nconst Home = () => (\n    <div className=\"banner\">\n      <img src={banner} alt=\"Swat team at US Airsoft\" className=\"bannerimg\" />\n      <div className=\"overlay\"></div>\n      <div className=\"overlayText\">\n        The premier airsoft arena in the United States, Home of the first Stat Tracking & Leaderboard system!\n              </div>\n    </div>\n  );\n\nexport default Home;","import React, { Component } from 'react';\nimport '../../App.css';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../session';\nimport { compose } from 'recompose';\n\nimport * as ROLES from '../constants/roles';\n \nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n        loading: false,\n        users: [],\n      };\n    }\n   \n    componentDidMount() {\n      this.setState({ loading: true });\n   \n      this.props.firebase.users().on('value', snapshot => {\n        const usersObject = snapshot.val();\n   \n        const usersList = Object.keys(usersObject).map(key => ({\n          ...usersObject[key],\n          uid: key,\n        }));\n   \n        this.setState({\n          users: usersList,\n          loading: false,\n        });\n      });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { users, loading } = this.state;\n     \n        return (\n          <div className=\"pagePlaceholder\">\n            <h1>Admin</h1>\n     \n            {loading && <div>Loading ...</div>}\n     \n            <UserList users={users} />\n          </div>\n        );\n      }\n    }\n     \n    const UserList = ({ users }) => (\n      <ul>\n        {users.map(user => (\n          <li key={user.uid}>\n            <span>\n              <strong>ID:</strong> {user.uid}\n            </span>\n            <span>\n              <strong>E-Mail:</strong> {user.email}\n            </span>\n            <span>\n              <strong>Username:</strong> {user.username}\n            </span>\n          </li>\n        ))}\n      </ul>\n    );\n\nconst condition = authUser =>\nauthUser && !!authUser.roles[ROLES.ADMIN];\n \nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n    )(AdminPage);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport '../../App.css';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROLES from '../constants/roles';\n \n \nconst SignUpPage = () => (\n  <div className=\"pagePlaceholder\">\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    isAdmin: false,\n    error: null,\n  };\n \nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n    onChangeCheckbox = event => {\n        this.setState({ [event.target.name]: event.target.checked });\n    };\n \n  onSubmit = event => {\n    const { username, email, passwordOne, isAdmin } = this.state;\n    const roles = {};\n    if (isAdmin) {\n    roles[ROLES.ADMIN] = ROLES.ADMIN;\n    }\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n            roles,\n          });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  }\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      isAdmin,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n            Admin:\n            <input\n            name=\"isAdmin\"\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={this.onChangeCheckbox}\n            />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n            Sign Up\n        </button>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={\"/register\"}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n \nexport default SignUpPage;\n \nexport { SignUpForm, SignUpLink };","export const ADMIN = 'ADMIN';","import React, { Component } from 'react';\nimport '../../App.css';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../session';\nimport { compose } from 'recompose';\n\nimport { Button, Form } from 'react-bootstrap/';\n\nimport * as ROLES from '../constants/roles';\n\nrequire('dotenv').config();\n\nclass EnterWins extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            results:\"Here is where results will appear\",\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    componentDidMount(){\n        document.getElementById(\"usernameBox\").focus();\n        document.addEventListener(\"keypress\", \n        (tmp) => this.handleKeypress(tmp))\n      }\n\n    handleKeypress(event) {\n        if (event.keyCode === 13) {\n            document.getElementById(\"usernameBox\").focus();\n        }\n    }\n\n    updateUser = (event) => {\n        event.preventDefault()\n        //Make API CALL HERE\n        var apiCall = process.env.REACT_APP_API_CALL_WIN + this.state.value;\n        fetch(apiCall)\n        .then((response) => {\n            var x = response;\n            console.log(x);\n            //this.setState({ results: response},\n            //)\n            }\n        )\n        //console.log(apiCall)\n        //End API call\n        document.getElementById(\"usernameBox\").focus();\n        this.setState({value: \"\"})\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"pagePlaceholder\">Admin - Enter Wins</h1>\n                <div className=\"form-box\">\n                <Form id=\"formBox\" onSubmit={this.updateUser}>\n                    <Form.Group controlId=\"usernameBox\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control onChange={this.handleChange}\n                        value={this.state.value}\n                        placeholder=\"Enter username to add points to\" />\n                        <Form.Text id=\"userName\" className=\"text-muted\">\n                            {this.state.results}\n                        </Form.Text>\n                        <Button type=\"submit\" id=\"register\" variant=\"primary\">\n                            Submit\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser =>\n    authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n)(EnterWins);","import React, { Component } from 'react';\nimport '../../App.css';\n\nimport { withFirebase } from '../Firebase';\nimport { withAuthorization } from '../session';\nimport { compose } from 'recompose';\n\nimport { Button, Form } from 'react-bootstrap/';\n\nimport * as ROLES from '../constants/roles';\n \nclass EnterLosses extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            results:\"Here is where results will appear\",\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    componentDidMount(){\n        document.getElementById(\"usernameBox\").focus();\n        document.addEventListener(\"keypress\", \n        (tmp) => this.handleKeypress(tmp))\n      }\n\n    handleKeypress(event) {\n        if (event.keyCode === 13) {\n            document.getElementById(\"usernameBox\").focus();\n        }\n    }\n\n    updateUser = (event) => {\n        event.preventDefault()\n        //Make API CALL HERE\n        var apiCall = process.env.REACT_APP_API_CALL_LOSS + this.state.value;\n        fetch(apiCall)\n        .then((response) => {\n            var x = response;\n            console.log(x);\n            //this.setState({ results: response},\n            //)\n            }\n        )\n        //console.log(apiCall)\n        //End API call\n        document.getElementById(\"usernameBox\").focus();\n        this.setState({value: \"\"})\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"pagePlaceholder\">Admin - Enter Losses</h1>\n                <div className=\"form-box\">\n                <Form id=\"formBox\" onSubmit={this.updateUser}>\n                    <Form.Group controlId=\"usernameBox\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control onChange={this.handleChange}\n                        value={this.state.value}\n                        placeholder=\"Enter username to add points to\" />\n                        <Form.Text id=\"userName\" className=\"text-muted\">\n                            {this.state.results}\n                        </Form.Text>\n                        <Button type=\"submit\" id=\"register\" variant=\"primary\">\n                            Submit\n                        </Button>\n                    </Form.Group>\n                </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst condition = authUser =>\n    authUser && !!authUser.roles[ROLES.ADMIN];\n\nexport default compose(\n    withAuthorization(condition),\n    withFirebase,\n    )(EnterLosses);","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./Login\"\nimport Navigation from \"./Navigation\"\nimport { withAuthentication } from './components/session';\nimport { PasswordForgetForm } from './passwordForgot';\nimport AccountPage from './components/Pages/Account';\nimport Home from './components/Pages/home'\nimport Admin from './components/Pages/Admin'\nimport SignUpForm from './components/Pages/Signup'\nimport EnterWins from './components/Pages/enterwins';\nimport EnterLosses from './components/Pages/enterlosses';\n\n\nconst App = () => (\n      <Router>\n        <div className=\"staticBG\">\n          <Navigation />\n          <Switch>\n            <Route path=\"/enterwins\">\n              <EnterWins />\n            </Route>\n            <Route path=\"/enterlosses\">\n              <EnterLosses />\n            </Route>\n            <Route path=\"/register\">\n              <SignUpForm />\n            </Route>\n            <Route path=\"/admin\">\n              <Admin />\n            </Route>\n            <Route path=\"/account\">\n              <AccountPage />\n            </Route>\n            <Route path=\"/forgotpassword\">\n              <PasswordForgetForm />\n            </Route>\n            <Route path=\"/login\">\n              <LoginRoute />\n            </Route>\n            <Route path=\"/leaderboard\">\n              <Leaderboard />\n            </Route>\n            <Route path=\"/pricing\">\n              <Pricing />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n);\n\nfunction Leaderboard() {\n  return <h2 className=\"pagePlaceholder\">Leaderboard</h2>;\n}\nfunction Pricing() {\n  return <h2 className=\"pagePlaceholder\">Pricing</h2>;\n}\n\nfunction LoginRoute() {\n  return <div className=\"pagePlaceholder\"><Login /></div>\n}\nexport default withAuthentication(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={new Firebase()}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/us-airsoft-logo.535ce2fb.png\";","module.exports = __webpack_public_path__ + \"static/media/airsoftbanner.93d9ab67.jpg\";"],"sourceRoot":""}