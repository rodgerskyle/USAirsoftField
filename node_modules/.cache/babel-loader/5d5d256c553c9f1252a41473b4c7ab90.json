{"ast":null,"code":"var _jsxFileName = \"/Users/kyle/Csci/capstone2/usairsoft/src/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { withFirebase } from './components/Firebase';\nimport { PasswordForgetLink } from './passwordForgot';\nimport ReCAPTCHA from 'react-google-recaptcha'; //import { SignUpLink } from './components/Pages/Signup';\n//    <SignUpLink /> \n\nconst SignInPage = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, \"SignIn\"), /*#__PURE__*/React.createElement(SignInForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(PasswordForgetLink, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n  robot: false\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState({ ...INITIAL_STATE\n        });\n        this.props.history.push(\"/\");\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.state = { ...INITIAL_STATE\n    };\n  }\n\n  recaptchaLoaded() {\n    console.log(\"Captcha loaded\");\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    const isInvalid = password === '' || email === '';\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReCAPTCHA, {\n      sitekey: \"6Lc0JPsUAAAAAGfLV1lzptnyO2V1dTU7GfR5_5h5\",\n      render: \"explicit\",\n      onloadCallback: this.recaptchaLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    })), error && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/Users/kyle/Csci/capstone2/usairsoft/src/Login.js"],"names":["React","Component","withRouter","compose","withFirebase","PasswordForgetLink","ReCAPTCHA","SignInPage","INITIAL_STATE","email","password","error","robot","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","catch","preventDefault","onChange","target","name","value","recaptchaLoaded","bind","console","log","render","isInvalid","message","SignInForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n \nimport { withFirebase } from './components/Firebase';\nimport { PasswordForgetLink } from './passwordForgot';\nimport ReCAPTCHA from 'react-google-recaptcha';\n\n//import { SignUpLink } from './components/Pages/Signup';\n//    <SignUpLink /> \n \nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <PasswordForgetLink />\n  </div>\n);\n\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n  robot: false\n};\n \nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n \n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  recaptchaLoaded() {\n      console.log(\"Captcha loaded\");\n  }\n \n  onSubmit = event => {\n    const { email, password } = this.state;\n \n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n \n    event.preventDefault();\n  };\n \n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n \n  render() {\n    const { email, password, error } = this.state;\n \n    const isInvalid = password === '' || email === '';\n \n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n        <div className=\"formBox\">\n        <ReCAPTCHA\n        sitekey=\"6Lc0JPsUAAAAAGfLV1lzptnyO2V1dTU7GfR5_5h5\"\n        render=\"explicit\"\n        onloadCallback={this.recaptchaLoaded}\n        />\n        </div>\n \n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n \nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n \nexport default SignInPage;\n \nexport { SignInForm };"]},"metadata":{},"sourceType":"module"}